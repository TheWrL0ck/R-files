n=as.integer(readline("enter num"))
b=1
cat("0 1 ")
while((a+b)<n){
cat(a+b,"")
b=a+b
a=b-a
}
# check if the number of terms is valid
if(nterms <= 0) {
print("Plese enter a positive integer")
} else {
if(nterms == 1) {
print("Fibonacci sequence:")
print(n1)
} else {
print("Fibonacci sequence:")
print(n1)
print(n2)
while(count < nterms) {
nth = n1 + n2
print(nth)
# update values
n1 = n2
n2 = nth
count = count + 1
}
}
}
n=as.integer(readline("enter num"))
for (i in 1:(n-1)) {
if(n%%i==0)
sum=sum+i
}
if(n==sum){
print("It is perfect")
}else{
print("Not perfect")
}
{
n <- as.integer(readline(prompt = "Enter a number :"))
i = 1
s = 0
while (i < n) {
if (n %% i == 0) {
s = s + i
}
i = i + 1
}
if (s == n) {
print(paste("The number is perfect :", n))
} else{
print(paste("The number is not perfect :", n))
}
}
{
n <- as.integer(readline(prompt = "Enter a number :"))
i = 1
s = 0
while (i < n) {
if (n %% i == 0) {
s = s + i
}
i = i + 1
}
if (s == n) {
print(paste("The number is perfect :", n))
} else{
print(paste("The number is not perfect :", n))
}
}
n=as.integer(readline("enter num"))
b=1
cat("0 1 ")
while((a+b)<n){
cat(a+b,"")
b=a+b
a=b-a
}
# check if the number of terms is valid
if(nterms <= 0) {
print("Plese enter a positive integer")
} else {
if(nterms == 1) {
print("Fibonacci sequence:")
print(n1)
} else {
print("Fibonacci sequence:")
print(n1)
print(n2)
while(count < nterms) {
nth = n1 + n2
print(nth)
# update values
n1 = n2
n2 = nth
count = count + 1
}
}
}
# take input from the user
{
nterms = as.integer(readline(prompt="How many terms? "))
# first two terms
n1 = 0
n2 = 1
count = 2
# check if the number of terms is valid
if(nterms <= 0) {
print("Plese enter a positive integer")
} else {
if(nterms == 1) {
print("Fibonacci sequence:")
print(n1)
} else {
print("Fibonacci sequence:")
print(n1)
print(n2)
while(count < nterms) {
nth = n1 + n2
print(nth)
# update values
n1 = n2
n2 = nth
count = count + 1
}
}
}
}
k=1
i=0
j=0
for (i in 1:4) {
for(j in 1:i){
cat(k," ")
k=k+1
}
cat("\n")
}
i=0
j=0
for (i in 1:4) {
for (j in 0:(4-i)) {
cat(" ")
}
for(j in 1:i){
cat("* ")
}
cat("\n")
}
