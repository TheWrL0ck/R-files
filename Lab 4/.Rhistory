{
unique_num=function(num){
arr <- c()
while (n > 0) {
r = n %% 10
arr <- append(arr,r)
n = n %/% 10
}
uni = length(unique(arr))
return(uni)
}
{
average=function(a,b,c){
tot = a+b+c
avg = tot/3
return(avg);
}
a = as.integer(readline(prompt = "Enter a number :"))
b = as.integer(readline(prompt = "Enter a number :"))
c = as.integer(readline(prompt = "Enter a number :"))
print(paste("Avg of the numbers is ",average(a,b,c)))
}
4
5
6
{num = as.integer(readline(prompt="Enter a number: "))
factorial=function(num){
fact = 1
if(num < 0) {
return('err')
} else if(num == 0) {
return(1)
} else {
for(i in 1:num) {
fact = fact * i
}
return(fact)
}
}
print(paste("The factorial of", num ,"is",factorial(num)))}
{s1="hello"
s2="new"
s3="world"
print(paste(s1,s2,s3, sep = "-"))}
{sumN<-function(n)
{
if(n == 1) {
return (1)
} else {
return (n + sumN(n - 1))
}
}
n = as.integer(readline('Enter value of N : '))
print(paste('Sum of Series 1+2+...+N : ',sumN(n)))}
{reverse = function(num)
{
if(num < 10)
{
return(num)
}else{
d = num %% 10
num = num %/% 10
place = num
f = 1
while(place != 0){
f = f * 10
place = place %/% 10;
}
return( (d*f) + reverse(num))
}
}
num = as.integer(readline(prompt="Enter a number: "))
cat("\nReverse of the number ",num, "is:",reverse(num))}
{reverse = function(num)
{
if(num < 10)
{
return(num)
}else{
d = num %% 10
num = num %/% 10
place = num
f = 1
while(place != 0){
f = f * 10
place = place %/% 10;
}
return( (d*f) + reverse(num))
}
}
num = as.integer(readline(prompt="Enter a number: "))
cat("Reverse of the number ",num, "is:",reverse(num))}
{interest<-function(P,T,R)
{
result <-P*R*T/100
}
P = as.integer(readline(prompt = "Enter THE VALUE OF P: "))
T = as.integer(readline(prompt = "Enter THE VALUE OF T: "))
R = as.integer(readline(prompt = "Enter THE VALUE OF R: "))
print(paste("The interest of", P,"over ", T," years with rate ",R," is", interest(P,T,R)))}
{s1="hello"
s2="new"
s3="world"
print(paste(s1,s2,s3, sep = "-"))}
{str="This is an example"
count = nchar(str)
print(count)}
{library("stringr")
mystr="Hello new world"
substr <- substring("hello new world", 11, 15)
cat("Extracted String: ",substr)
str=str_replace(mystr,substr,"India")
cat("\nTranformed String:",str)}
{vowel=0
str="this is vowel test"
str_list=str_split(str,"")[[1]]
for (i in str_list){
if ((i == 'a') || (i == 'e') || (i == 'i') || (i == 'o') || (i == 'u')){
vowel = vowel + 1
}
}
cat("Vowel count:",vowel)}
{s1 <- "this is a match test"
s2 <- "this is a match test"
cat("Same string=",tolower(s1) == tolower(s2))}
{mystr="This is a reverse string test"
print(mystr)
cat("After reverse:",stringi::stri_reverse(mystr))}
{library("stringr")
mystr="This is an example"
sub_str="example"
location<-str_locate(mystr,sub_str)
print(location)
str_sub(mystr, location[1,1], location[1,2]) <- "new example"
print(mystr)}
{v <- c(1, 2, 3, 4, 5)
print(sqrt(v))}
{v1 <- c(1, 2, 3, 4, 5)
v2 <- c(1, 2, 3, 4, 5)
isEqual <- all(v1 == v2)
print(isEqual)}
{v1 <- c(1, 1, 0, 0)
v2 <- c(1, 0, 1, 0)
multi.result <- v1*v2
print(multi.result)}
v1 <- c(1, 2, 3, 4, 5)
v2 <- c(1, 2, 3, 4, 5)
print(v1**v2)
x <- 1:4
cat("minimum = ", min(x),"\n")
cat("maximum = ", max(x),"\n")
cat("sum = ", sum(x))
data_list <-list(c("Jan","Feb","March"), matrix(c(1,2,3,4,5,8), nrow=2), list("Red",12.3))
names(data_list)<-c("Month","Matrix","Misc")
print(data_list$Matrix)
print(data_list$Misc)
print(data_list$Month)
row_names = c("row1", "row2", "row3", "row4")
col_names = c("col1", "col2", "col3", "col4")
M = matrix(c(1:16), nrow = 4, byrow = TRUE, dimnames = list(row_names, col_names))
print("Original Matrix:")
print(M)
print("Display 1st row:")
print(M[1,])
print("Display 3rd row:")
print(M[3,])
print("Display 2nd column:")
print(M[,2])
row_names = c("row1", "row2", "row3", "row4")
col_names = c("col1", "col2", "col3", "col4")
M = matrix(c(1:16), nrow = 4, byrow = TRUE, dimnames = list(row_names, col_names))
print("Original Matrix:")
print(M)
print("Display 1st row:")
print(M[1,])
print("Display 3rd row:")
print(M[3,])
print("Display 2nd column:")
print(M[,2])
